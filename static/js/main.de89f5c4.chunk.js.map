{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","initialtodos","App","todosArray","useState","updateTodos","newTodoTitle","setNewTodo","selectedUserId","setUserId","titleError","setTitleError","selectedUserError","setselectedUserError","newTodo","Math","max","onSubmit","event","preventDefault","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de89f5c4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  user && (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  )\n);\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': todo.completed,\n      },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getNextTodoId(todosArray: Todo[]): number {\n  return Math.max(...todosArray.map(todo => todo.id)) + 1;\n}\n\nconst initialtodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, updateTodos] = useState<Todo[]>(initialtodos);\n  const [newTodoTitle, setNewTodo] = useState('');\n  const [selectedUserId, setUserId] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [selectedUserError, setselectedUserError] = useState(false);\n\n  const newTodo: Todo = {\n    id: getNextTodoId(todos),\n    userId: selectedUserId,\n    title: newTodoTitle,\n    completed: false,\n    user: getUser(selectedUserId),\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!newTodoTitle) {\n      setTitleError(true);\n    }\n\n    if (selectedUserId === 0) {\n      setselectedUserError(true);\n    }\n\n    if (newTodoTitle && selectedUserId !== 0) {\n      updateTodos([...todos, newTodo]);\n      setNewTodo('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"titleTodo\">Title: </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"titleTodo\"\n            placeholder=\"Enter a title\"\n            value={newTodoTitle}\n            onChange={(event) => {\n              setNewTodo(event.target.value);\n              setTitleError(false);\n            }}\n          />\n\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={selectedUserId}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n              setselectedUserError(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {name}\n              </option>\n            ))}\n          </select>\n\n          {selectedUserError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}